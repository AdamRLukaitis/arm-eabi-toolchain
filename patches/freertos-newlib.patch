diff --git a/newlib-2010q1/newlib/libc/include/sys/config.h b/newlib-2010q1/newlib/libc/include/sys/config.h
index 3084193..f8825e2 100644
--- a/newlib-2010q1/newlib/libc/include/sys/config.h
+++ b/newlib-2010q1/newlib/libc/include/sys/config.h
@@ -125,6 +125,11 @@
 #define _REENT_SMALL
 #endif /* __m32c__ */
 
+/* For github.com/hugovincent/mbed-freertos */
+#if defined(__thumb__) || defined(__thumb2__) || defined(__arm__)
+#define __DYNAMIC_REENT__
+#endif
+
 #ifdef __thumb2__
 /* Thumb-2 based ARMv7M devices are really small.  */
 #define _REENT_SMALL
diff --git a/newlib-2010q1/newlib/libc/include/sys/features.h b/newlib-2010q1/newlib/libc/include/sys/features.h
index e43f261..8bb134b 100644
--- a/newlib-2010q1/newlib/libc/include/sys/features.h
+++ b/newlib-2010q1/newlib/libc/include/sys/features.h
@@ -175,6 +175,13 @@ extern "C" {
 #define _POSIX_TIMERS				     1
 #endif
 
+/* For github.com/hugovincent/mbed-freertos */
+#if defined(__thumb__) || defined(__thumb2__) || defined(__arm__)
+#define _POSIX_TIMERS					1
+#define _POSIX_MONOTONIC_CLOCK			200112L
+#define _POSIX_REALTIME_SIGNALS			1
+#endif
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/newlib-2010q1/newlib/libc/include/sys/signal.h b/newlib-2010q1/newlib/libc/include/sys/signal.h
index 39d8bc6..d5d8e81 100644
--- a/newlib-2010q1/newlib/libc/include/sys/signal.h
+++ b/newlib-2010q1/newlib/libc/include/sys/signal.h
@@ -17,6 +17,13 @@ extern "C" {
 
 typedef unsigned long sigset_t;
 
+/* Temporary hack to get the signal includes in FreeRTOS */
+#if defined(__arm__) || defined(__thumb__) || defined(__thumb2__)
+#define FREERTOS_SIGNAL_HACK
+#define __rtems__
+#include <sys/types.h>
+#endif
+
 #if defined(__rtems__)
 
 #if defined(_POSIX_REALTIME_SIGNALS)
@@ -83,7 +90,7 @@ typedef struct {
  *      application should not use both simultaneously.
  */
 
-typedef void (*_sig_func_ptr)();
+typedef void (*_sig_func_ptr)(int);
 
 struct sigaction {
   int         sa_flags;       /* Special flags to affect behavior of signal */
@@ -334,6 +341,10 @@ int _EXFUN(sigqueue, (pid_t pid, int signo, const union sigval value));
 #endif
 #endif
 
+#if defined(FREERTOS_SIGNAL_HACK)
+#undef __rtems__
+#endif
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/newlib-2010q1/newlib/libc/signal/Makefile.am b/newlib-2010q1/newlib/libc/signal/Makefile.am
index f4f5d46..042b2ca 100644
--- a/newlib-2010q1/newlib/libc/signal/Makefile.am
+++ b/newlib-2010q1/newlib/libc/signal/Makefile.am
@@ -4,7 +4,7 @@ AUTOMAKE_OPTIONS = cygnus
 
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
 
-LIB_SOURCES = raise.c signal.c
+LIB_SOURCES = signal.c
 
 libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 
@@ -21,7 +21,7 @@ endif # USE_LIBTOOL
 
 include $(srcdir)/../../Makefile.shared
 
-CHEWOUT_FILES = raise.def signal.def
+CHEWOUT_FILES = signal.def
 
 SUFFIXES = .def
 
diff --git a/newlib-2010q1/newlib/libc/signal/Makefile.in b/newlib-2010q1/newlib/libc/signal/Makefile.in
index 8ffea2a..0ff04a9 100644
--- a/newlib-2010q1/newlib/libc/signal/Makefile.in
+++ b/newlib-2010q1/newlib/libc/signal/Makefile.in
@@ -57,12 +57,12 @@ LIBRARIES = $(noinst_LIBRARIES)
 ARFLAGS = cru
 lib_a_AR = $(AR) $(ARFLAGS)
 lib_a_LIBADD =
-am__objects_1 = lib_a-raise.$(OBJEXT) lib_a-signal.$(OBJEXT)
+am__objects_1 = lib_a-signal.$(OBJEXT)
 @USE_LIBTOOL_FALSE@am_lib_a_OBJECTS = $(am__objects_1)
 lib_a_OBJECTS = $(am_lib_a_OBJECTS)
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 libsignal_la_LIBADD =
-am__objects_2 = raise.lo signal.lo
+am__objects_2 = signal.lo
 @USE_LIBTOOL_TRUE@am_libsignal_la_OBJECTS = $(am__objects_2)
 libsignal_la_OBJECTS = $(am_libsignal_la_OBJECTS)
 @USE_LIBTOOL_TRUE@am_libsignal_la_rpath =
@@ -254,7 +254,7 @@ sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 AUTOMAKE_OPTIONS = cygnus
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
-LIB_SOURCES = raise.c signal.c
+LIB_SOURCES = signal.c
 libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 @USE_LIBTOOL_TRUE@noinst_LTLIBRARIES = libsignal.la
 @USE_LIBTOOL_TRUE@libsignal_la_SOURCES = $(LIB_SOURCES)
@@ -263,7 +263,7 @@ libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 @USE_LIBTOOL_FALSE@noinst_LIBRARIES = lib.a
 @USE_LIBTOOL_FALSE@lib_a_SOURCES = $(LIB_SOURCES)
 @USE_LIBTOOL_FALSE@lib_a_CFLAGS = $(AM_CFLAGS)
-CHEWOUT_FILES = raise.def signal.def
+CHEWOUT_FILES = signal.def
 SUFFIXES = .def
 CHEW = ../../doc/makedoc -f $(srcdir)/../../doc/doc.str
 TARGETDOC = ../tmp.texi
@@ -335,12 +335,6 @@ distclean-compile:
 .c.lo:
 	$(LTCOMPILE) -c -o $@ $<
 
-lib_a-raise.o: raise.c
-	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-raise.o `test -f 'raise.c' || echo '$(srcdir)/'`raise.c
-
-lib_a-raise.obj: raise.c
-	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-raise.obj `if test -f 'raise.c'; then $(CYGPATH_W) 'raise.c'; else $(CYGPATH_W) '$(srcdir)/raise.c'; fi`
-
 lib_a-signal.o: signal.c
 	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-signal.o `test -f 'signal.c' || echo '$(srcdir)/'`signal.c
 
