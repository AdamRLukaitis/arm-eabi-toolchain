diff --git a/newlib/libc/include/locale.h b/newlib/libc/include/locale.h
index 73bca08..11cc1a6 100644
--- a/newlib/libc/include/locale.h
+++ b/newlib/libc/include/locale.h
@@ -103,14 +103,12 @@ struct lconv
 };
 #endif /* _AEABI_PORTABLE */
 
-#ifndef _REENT_ONLY
 char *_EXFUN(setlocale,(int category, const char *locale));
 # ifdef _AEABI_PORTABLE
 struct __aeabi_lconv *_EXFUN(__aeabi_localeconv,(void));
 # else
 struct lconv *_EXFUN(localeconv,(void));
 # endif
-#endif
 
 struct _reent;
 char *_EXFUN(_setlocale_r,(struct _reent *, int category, const char *locale));
diff --git a/newlib/libc/include/reent.h b/newlib/libc/include/reent.h
index 4617c0d..3758a8a 100644
--- a/newlib/libc/include/reent.h
+++ b/newlib/libc/include/reent.h
@@ -92,6 +92,7 @@ extern "C" {
 
 #include <sys/reent.h>
 #include <sys/_types.h>
+#include <sys/types.h>
 #include <machine/types.h>
 
 #define __need_size_t
@@ -147,7 +148,7 @@ extern int _isatty_r _PARAMS ((struct _reent *, int));
 extern int _kill_r _PARAMS ((struct _reent *, int, int));
 extern int _link_r _PARAMS ((struct _reent *, const char *, const char *));
 extern _off_t _lseek_r _PARAMS ((struct _reent *, int, _off_t, int));
-extern int _mkdir_r _PARAMS ((struct _reent *, const char *, int));
+extern int _mkdir_r _PARAMS ((struct _reent *, const char *, mode_t));
 extern int _open_r _PARAMS ((struct _reent *, const char *, int, int));
 extern _ssize_t _read_r _PARAMS ((struct _reent *, int, void *, size_t));
 extern int _rename_r _PARAMS ((struct _reent *, const char *, const char *));
diff --git a/newlib/libc/include/sys/config.h b/newlib/libc/include/sys/config.h
index 3245e54..81cbfc0 100644
--- a/newlib/libc/include/sys/config.h
+++ b/newlib/libc/include/sys/config.h
@@ -141,6 +141,15 @@
 #define _REENT_SMALL
 #endif /* __m32c__ */
 
+/* For github.com/hugovincent/mbed-freertos */
+#if defined(__thumb__) || defined(__thumb2__) || defined(__arm__)
+#define __DYNAMIC_REENT__
+#define _REENT_SMALL
+#define MALLOC_ALIGNMENT 8
+#define __FILENAME_MAX__ 64
+#define _READ_WRITE_RETURN_TYPE _ssize_t
+#endif
+
 /* CSL LOCAL */
 #ifdef __thumb2__
 /* Thumb-2 based ARMv7M devices are really small, and that's where we
diff --git a/newlib/libc/include/sys/errno.h b/newlib/libc/include/sys/errno.h
index fec0bf8..61805ce 100644
--- a/newlib/libc/include/sys/errno.h
+++ b/newlib/libc/include/sys/errno.h
@@ -19,10 +19,8 @@ extern "C" {
 extern volatile int *__aeabi_errno_addr _PARAMS ((void));
 # define errno (*__aeabi_errno_addr())
 #else
-# ifndef _REENT_ONLY
 # define errno (*__errno())
 extern int *__errno _PARAMS ((void));
-# endif
 #endif
 
 /* Please don't use these variables directly.
diff --git a/newlib/libc/include/sys/features.h b/newlib/libc/include/sys/features.h
index 9faf2b8..6f0577a 100644
--- a/newlib/libc/include/sys/features.h
+++ b/newlib/libc/include/sys/features.h
@@ -199,6 +199,13 @@ extern "C" {
   #endif
 #endif
 
+/* For github.com/hugovincent/mbed-freertos */
+#if defined(__thumb__) || defined(__thumb2__) || defined(__arm__)
+#define _POSIX_TIMERS					1
+#define _POSIX_MONOTONIC_CLOCK			200112L
+#define _POSIX_REALTIME_SIGNALS			1
+#endif
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/newlib/libc/include/sys/reent.h b/newlib/libc/include/sys/reent.h
index 0767259..0fd4366 100644
--- a/newlib/libc/include/sys/reent.h
+++ b/newlib/libc/include/sys/reent.h
@@ -66,7 +66,7 @@ struct __tm
  * atexit() support.
  */
 
-#define	_ATEXIT_SIZE 32	/* must be at least 32 to guarantee ANSI conformance */
+#define	_ATEXIT_SIZE 4	/* must be at least 32 to guarantee ANSI conformance, but here for FreeRTOS, 4 should suffice */
 
 struct _on_exit_args {
 	void *  _fnargs[_ATEXIT_SIZE];	        /* user fn args */
@@ -844,8 +844,6 @@ void _reclaim_reent _PARAMS ((struct _reent *));
 
 /* #define _REENT_ONLY define this to get only reentrant routines */
 
-#ifndef _REENT_ONLY
-
 #if defined(__DYNAMIC_REENT__) && !defined(__SINGLE_THREAD__)
 #ifndef __getreent
   struct _reent * _EXFUN(__getreent, (void));
@@ -855,8 +853,6 @@ void _reclaim_reent _PARAMS ((struct _reent *));
 # define _REENT _impure_ptr
 #endif /* __SINGLE_THREAD__ || !__DYNAMIC_REENT__ */
 
-#endif /* !_REENT_ONLY */
-
 #define _GLOBAL_REENT _global_impure_ptr
 
 #ifdef __cplusplus
diff --git a/newlib/libc/include/sys/signal.h b/newlib/libc/include/sys/signal.h
index e83a7eb..b4341ff 100644
--- a/newlib/libc/include/sys/signal.h
+++ b/newlib/libc/include/sys/signal.h
@@ -14,6 +14,13 @@ extern "C" {
 
 typedef unsigned long sigset_t;
 
+/* Temporary hack to get the signal includes in FreeRTOS */
+#if defined(__arm__) || defined(__thumb__) || defined(__thumb2__)
+#define FREERTOS_SIGNAL_HACK
+#define __rtems__
+#include <sys/types.h>
+#endif
+
 #if defined(__rtems__)
 
 #if defined(_POSIX_REALTIME_SIGNALS)
@@ -80,7 +87,7 @@ typedef struct {
  *      application should not use both simultaneously.
  */
 
-typedef void (*_sig_func_ptr)();
+typedef void (*_sig_func_ptr)(int);
 
 struct sigaction {
   int         sa_flags;       /* Special flags to affect behavior of signal */
@@ -328,6 +335,10 @@ int _EXFUN(sigqueue, (pid_t pid, int signo, const union sigval value));
 #endif
 #endif
 
+#if defined(FREERTOS_SIGNAL_HACK)
+#undef __rtems__
+#endif
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/newlib/libc/locale/locale.c b/newlib/libc/locale/locale.c
index 953da13..ad5db86 100644
--- a/newlib/libc/locale/locale.c
+++ b/newlib/libc/locale/locale.c
@@ -1006,8 +1006,6 @@ _DEFUN(_localeconv_r, (data),
   return (struct lconv *) &lconv;
 }
 
-#ifndef _REENT_ONLY
-
 #ifndef __CYGWIN__
 /* Cygwin provides its own version of setlocale to perform some more
    initialization work.  It calls _setlocale_r, though. */
@@ -1026,4 +1024,3 @@ _DEFUN_VOID(localeconv)
   return _localeconv_r (_REENT);
 }
 
-#endif
diff --git a/newlib/libc/signal/Makefile.am b/newlib/libc/signal/Makefile.am
index f4f5d46..042b2ca 100644
--- a/newlib/libc/signal/Makefile.am
+++ b/newlib/libc/signal/Makefile.am
@@ -4,7 +4,7 @@ AUTOMAKE_OPTIONS = cygnus
 
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
 
-LIB_SOURCES = raise.c signal.c
+LIB_SOURCES = signal.c
 
 libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 
@@ -21,7 +21,7 @@ endif # USE_LIBTOOL
 
 include $(srcdir)/../../Makefile.shared
 
-CHEWOUT_FILES = raise.def signal.def
+CHEWOUT_FILES = signal.def
 
 SUFFIXES = .def
 
diff --git a/newlib/libc/signal/Makefile.in b/newlib/libc/signal/Makefile.in
index eecd6b6..b3d1944 100644
--- a/newlib/libc/signal/Makefile.in
+++ b/newlib/libc/signal/Makefile.in
@@ -55,12 +55,12 @@ LIBRARIES = $(noinst_LIBRARIES)
 ARFLAGS = cru
 lib_a_AR = $(AR) $(ARFLAGS)
 lib_a_LIBADD =
-am__objects_1 = lib_a-raise.$(OBJEXT) lib_a-signal.$(OBJEXT)
+am__objects_1 = lib_a-signal.$(OBJEXT)
 @USE_LIBTOOL_FALSE@am_lib_a_OBJECTS = $(am__objects_1)
 lib_a_OBJECTS = $(am_lib_a_OBJECTS)
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 libsignal_la_LIBADD =
-am__objects_2 = raise.lo signal.lo
+am__objects_2 = signal.lo
 @USE_LIBTOOL_TRUE@am_libsignal_la_OBJECTS = $(am__objects_2)
 libsignal_la_OBJECTS = $(am_libsignal_la_OBJECTS)
 libsignal_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
@@ -228,7 +228,7 @@ top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 AUTOMAKE_OPTIONS = cygnus
 INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
-LIB_SOURCES = raise.c signal.c
+LIB_SOURCES = signal.c
 libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 @USE_LIBTOOL_TRUE@noinst_LTLIBRARIES = libsignal.la
 @USE_LIBTOOL_TRUE@libsignal_la_SOURCES = $(LIB_SOURCES)
@@ -237,7 +237,7 @@ libsignal_la_LDFLAGS = -Xcompiler -nostdlib
 @USE_LIBTOOL_FALSE@noinst_LIBRARIES = lib.a
 @USE_LIBTOOL_FALSE@lib_a_SOURCES = $(LIB_SOURCES)
 @USE_LIBTOOL_FALSE@lib_a_CFLAGS = $(AM_CFLAGS)
-CHEWOUT_FILES = raise.def signal.def
+CHEWOUT_FILES = signal.def
 SUFFIXES = .def
 CHEW = ../../doc/makedoc -f $(srcdir)/../../doc/doc.str
 TARGETDOC = ../tmp.texi
@@ -310,12 +310,6 @@ distclean-compile:
 .c.lo:
 	$(LTCOMPILE) -c -o $@ $<
 
-lib_a-raise.o: raise.c
-	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-raise.o `test -f 'raise.c' || echo '$(srcdir)/'`raise.c
-
-lib_a-raise.obj: raise.c
-	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-raise.obj `if test -f 'raise.c'; then $(CYGPATH_W) 'raise.c'; else $(CYGPATH_W) '$(srcdir)/raise.c'; fi`
-
 lib_a-signal.o: signal.c
 	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_a_CFLAGS) $(CFLAGS) -c -o lib_a-signal.o `test -f 'signal.c' || echo '$(srcdir)/'`signal.c
 
